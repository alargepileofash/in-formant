def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY');
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.1'
    defaultConfig {
        if (buildAsApplication) {
            applicationId "fr.cloyunhee.speechanalysis"
        }
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 99201006
        versionName "2.1.6"
    }
    signingConfigs {
        release {
            storeFile file("../keystore.jks")
            storePassword findProperty('keystorePass')
            keyAlias 'speechanalysis-key-alias'
            keyPassword findProperty('keystorePass')
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    
    if (buildAsLibrary) {
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith(".aar")) {
                    def fileName = "fr.cloyunhee.speechanalysis.aar";
                    output.outputFile = new File(outputFile.parent, fileName);
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.core:core:1.3.1"
}
